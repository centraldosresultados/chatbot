import React, { useState } from 'react';

function FerramentasMonitoramento({ socket, setResponseArea }) {
    const [loading, setLoading] = useState(false);

    const executarMigracao = () => {
        if (!socket) {
            setResponseArea(prev => prev + '‚ùå Socket n√£o conectado\n');
            return;
        }

        setLoading(true);
        setResponseArea(prev => prev + 'üîÑ Iniciando migra√ß√£o de valida√ß√µes...\n');

        // Emitir evento para executar migra√ß√£o no backend
        socket.emit('executarMigracao', {}, (response) => {
            setLoading(false);
            if (response.sucesso) {
                setResponseArea(prev => prev + '‚úÖ Migra√ß√£o conclu√≠da com sucesso!\n');
                setResponseArea(prev => prev + `üìä Resultado: ${response.resultado}\n\n`);
            } else {
                setResponseArea(prev => prev + `‚ùå Erro na migra√ß√£o: ${response.erro}\n\n`);
            }
        });
    };

    const verificarNaoMonitoradas = () => {
        if (!socket) {
            setResponseArea(prev => prev + '‚ùå Socket n√£o conectado\n');
            return;
        }

        setLoading(true);
        setResponseArea(prev => prev + 'üîç Verificando mensagens n√£o monitoradas...\n');

        socket.emit('verificarNaoMonitoradas', {}, (response) => {
            setLoading(false);
            if (response.sucesso) {
                setResponseArea(prev => prev + '‚úÖ Verifica√ß√£o conclu√≠da!\n');
                setResponseArea(prev => prev + `üìä Resultado: ${response.resultado}\n\n`);
            } else {
                setResponseArea(prev => prev + `‚ùå Erro na verifica√ß√£o: ${response.erro}\n\n`);
            }
        });
    };

    const forcarMonitoramentoTodos = () => {
        if (!socket) {
            setResponseArea(prev => prev + '‚ùå Socket n√£o conectado\n');
            return;
        }

        setLoading(true);
        setResponseArea(prev => prev + 'üîÑ For√ßando monitoramento de todas as mensagens pendentes...\n');

        socket.emit('forcarMonitoramento', {}, (response) => {
            setLoading(false);
            if (response.sucesso) {
                setResponseArea(prev => prev + '‚úÖ Monitoramento for√ßado iniciado!\n');
                setResponseArea(prev => prev + `üìä Resultado: ${response.resultado}\n\n`);
            } else {
                setResponseArea(prev => prev + `‚ùå Erro ao for√ßar monitoramento: ${response.erro}\n\n`);
            }
        });
    };

    const reprocessarMensagensAntigas = () => {
        if (!socket) {
            setResponseArea(prev => prev + '‚ùå Socket n√£o conectado\n');
            return;
        }

        const confirmacao = window.confirm(
            'Esta a√ß√£o ir√° reprocessar todas as mensagens antigas que podem n√£o ter sido entregues. ' +
            'Isso pode gerar muitos reenvios autom√°ticos. Continuar?'
        );

        if (!confirmacao) {
            setResponseArea(prev => prev + '‚ÑπÔ∏è Opera√ß√£o cancelada pelo usu√°rio\n\n');
            return;
        }

        setLoading(true);
        setResponseArea(prev => prev + '‚ö° Reprocessando mensagens antigas...\n');

        socket.emit('reprocessarMensagensAntigas', {}, (response) => {
            setLoading(false);
            if (response.sucesso) {
                setResponseArea(prev => prev + '‚úÖ Reprocessamento iniciado!\n');
                setResponseArea(prev => prev + `üìä Resultado: ${response.resultado}\n\n`);
            } else {
                setResponseArea(prev => prev + `‚ùå Erro no reprocessamento: ${response.erro}\n\n`);
            }
        });
    };

    return (
        <div className="event-test">
            <h2>üõ†Ô∏è Ferramentas de Monitoramento e Corre√ß√£o</h2>
            
            <div style={{ marginBottom: '20px', padding: '15px', backgroundColor: '#f8f9fa', borderRadius: '8px' }}>
                <h4 style={{ margin: '0 0 10px 0', color: '#0c5aa6' }}>‚ÑπÔ∏è Sobre estas ferramentas:</h4>
                <ul style={{ margin: '0', paddingLeft: '20px', fontSize: '14px' }}>
                    <li><strong>Migrar Valida√ß√µes:</strong> Move dados da cole√ß√£o antiga (tb_envio_validacoes) para a nova (validacoesCadastro)</li>
                    <li><strong>Verificar N√£o Monitoradas:</strong> Identifica mensagens que n√£o foram monitoradas e marca para reenvio</li>
                    <li><strong>For√ßar Monitoramento:</strong> Inicia monitoramento manual para mensagens pendentes</li>
                    <li><strong>Reprocessar Antigas:</strong> For√ßa reenvio de mensagens antigas que podem ter falhado</li>
                </ul>
            </div>

            <div className="controls-grid">
                <button 
                    onClick={executarMigracao}
                    disabled={!socket || loading}
                    style={{
                        backgroundColor: loading ? '#6c757d' : '#007bff',
                        color: 'white',
                        border: 'none',
                        padding: '12px 20px',
                        borderRadius: '6px',
                        cursor: loading ? 'not-allowed' : 'pointer',
                        fontSize: '14px',
                        fontWeight: 'bold',
                        marginRight: '10px',
                        marginBottom: '10px'
                    }}
                >
                    {loading ? '‚è≥ Processando...' : 'üìä Migrar Valida√ß√µes'}
                </button>

                <button 
                    onClick={verificarNaoMonitoradas}
                    disabled={!socket || loading}
                    style={{
                        backgroundColor: loading ? '#6c757d' : '#28a745',
                        color: 'white',
                        border: 'none',
                        padding: '12px 20px',
                        borderRadius: '6px',
                        cursor: loading ? 'not-allowed' : 'pointer',
                        fontSize: '14px',
                        fontWeight: 'bold',
                        marginRight: '10px',
                        marginBottom: '10px'
                    }}
                >
                    {loading ? '‚è≥ Processando...' : 'üîç Verificar N√£o Monitoradas'}
                </button>

                <button 
                    onClick={forcarMonitoramentoTodos}
                    disabled={!socket || loading}
                    style={{
                        backgroundColor: loading ? '#6c757d' : '#ffc107',
                        color: loading ? 'white' : 'black',
                        border: 'none',
                        padding: '12px 20px',
                        borderRadius: '6px',
                        cursor: loading ? 'not-allowed' : 'pointer',
                        fontSize: '14px',
                        fontWeight: 'bold',
                        marginRight: '10px',
                        marginBottom: '10px'
                    }}
                >
                    {loading ? '‚è≥ Processando...' : 'üîÑ For√ßar Monitoramento'}
                </button>

                <button 
                    onClick={reprocessarMensagensAntigas}
                    disabled={!socket || loading}
                    style={{
                        backgroundColor: loading ? '#6c757d' : '#dc3545',
                        color: 'white',
                        border: 'none',
                        padding: '12px 20px',
                        borderRadius: '6px',
                        cursor: loading ? 'not-allowed' : 'pointer',
                        fontSize: '14px',
                        fontWeight: 'bold',
                        marginRight: '10px',
                        marginBottom: '10px'
                    }}
                >
                    {loading ? '‚è≥ Processando...' : '‚ö° Reprocessar Antigas'}
                </button>
            </div>

            <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#fff3cd', borderRadius: '8px', border: '1px solid #ffeaa7' }}>
                <h4 style={{ margin: '0 0 10px 0', color: '#856404' }}>‚ö†Ô∏è Notas Importantes:</h4>
                <ul style={{ margin: '0', paddingLeft: '20px', fontSize: '14px', color: '#856404' }}>
                    <li>Execute a migra√ß√£o primeiro se estiver vendo dados inconsistentes</li>
                    <li>A verifica√ß√£o de n√£o monitoradas identifica problemas, mas n√£o os resolve automaticamente</li>
                    <li>O reprocessamento pode gerar muitos reenvios - use com cuidado</li>
                    <li>Acompanhe os logs no backend para ver o progresso das opera√ß√µes</li>
                </ul>
            </div>
        </div>
    );
}

export default FerramentasMonitoramento;
